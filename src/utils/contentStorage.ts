import { SiteContent } from '../types/content';
import { defaultContent } from '../data/defaultContent';
import { saveContentToDatabase, loadContentFromDatabase } from './supabase';

// Debounce —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
let saveTimeout: NodeJS.Timeout | null = null;
const SAVE_DELAY = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏

const STORAGE_KEY = 'siteContent';

export const saveContent = async (content: SiteContent, immediate: boolean = false): Promise<void> => {
  try {
    console.log('üåê –°–û–•–†–ê–ù–ï–ù–ò–ï –í –ì–õ–û–ë–ê–õ–¨–ù–£–Æ –ë–î (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)...');
    
    // –ü–†–ò–û–†–ò–¢–ï–¢: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ë–î
    if (immediate) {
      // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
      const dbSaved = await saveContentToDatabase(content);
      if (dbSaved) {
        console.log('‚úÖ –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ë–î —É—Å–ø–µ—à–Ω–æ');
        // –ë–µ–∫–∞–ø –≤ localStorage —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
        localStorage.setItem(STORAGE_KEY, JSON.stringify(content));
        console.log('üíæ –ë–µ–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage');
        window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: true } }));
      } else {
        console.log('‚ùå –û–®–ò–ë–ö–ê –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î');
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ë–î, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–µ–∫–∞–ø –≤ localStorage
        localStorage.setItem(STORAGE_KEY, JSON.stringify(content));
        console.log('üÜò –ê–í–ê–†–ò–ô–ù–´–ô –±–µ–∫–∞–ø –≤ localStorage');
        window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false } }));
      }
    } else {
      // –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î —Å debounce
      if (saveTimeout) {
        clearTimeout(saveTimeout);
      }
      
      saveTimeout = setTimeout(async () => {
        console.log('üåê –û–¢–õ–û–ñ–ï–ù–ù–û–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ë–î...');
        const dbSaved = await saveContentToDatabase(content);
        if (dbSaved) {
          console.log('‚úÖ –û–¢–õ–û–ñ–ï–ù–ù–û–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ë–î —É—Å–ø–µ—à–Ω–æ');
          // –ë–µ–∫–∞–ø –≤ localStorage —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
          localStorage.setItem(STORAGE_KEY, JSON.stringify(content));
          console.log('üíæ –ë–µ–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage');
          window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: true } }));
        } else {
          console.log('‚ùå –û–®–ò–ë–ö–ê –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î');
          // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ë–î, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–µ–∫–∞–ø –≤ localStorage
          localStorage.setItem(STORAGE_KEY, JSON.stringify(content));
          console.log('üÜò –ê–í–ê–†–ò–ô–ù–´–ô –±–µ–∫–∞–ø –≤ localStorage');
          window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false } }));
        }
      }, SAVE_DELAY);
    }
    
  } catch (error) {
    console.error('‚ùå Error in saveContent:', error);
    // –í —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–µ–∫–∞–ø –≤ localStorage
    try {
      localStorage.setItem(STORAGE_KEY, JSON.stringify(content));
      console.log('üÜò –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –±–µ–∫–∞–ø –≤ localStorage');
      window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false, error: error.message } }));
    } catch (localError) {
      console.error('üÜò –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–∂–µ –±–µ–∫–∞–ø:', localError);
      window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false, error: localError.message } }));
    }
  }
};

export const loadContent = async (): Promise<SiteContent> => {
  try {
    console.log('üåê –ó–ê–ì–†–£–ó–ö–ê –ò–ó –ì–õ–û–ë–ê–õ–¨–ù–û–ô –ë–î (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)...');
    
    // –ü–†–ò–û–†–ò–¢–ï–¢: –í—Å–µ–≥–¥–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ë–î
    const dbContent = await loadContentFromDatabase();
    if (dbContent) {
      console.log('‚úÖ –ö–û–ù–¢–ï–ù–¢ –ó–ê–ì–†–£–ñ–ï–ù –ò–ó –ì–õ–û–ë–ê–õ–¨–ù–û–ô –ë–î');
      const fixedContent = fixBlockOrder(dbContent);
      // –û–±–Ω–æ–≤–ª—è–µ–º –±–µ–∫–∞–ø –≤ localStorage
      localStorage.setItem(STORAGE_KEY, JSON.stringify(fixedContent));
      console.log('üíæ –ë–µ–∫–∞–ø –æ–±–Ω–æ–≤–ª–µ–Ω –≤ localStorage');
      return fixedContent;
    }
    
    console.log('‚ö†Ô∏è –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ë–î –ü–£–°–¢–ê - –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç');
    
    // –ï—Å–ª–∏ –ë–î –ø—É—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    const defaultFixedContent = fixBlockOrder(defaultContent);
    console.log('üîÑ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ë–î...');
    await saveContentToDatabase(defaultFixedContent);
    
    // –°–æ–∑–¥–∞–µ–º –±–µ–∫–∞–ø –≤ localStorage
    localStorage.setItem(STORAGE_KEY, JSON.stringify(defaultFixedContent));
    console.log('üíæ –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ –±–µ–∫–∞–ø –≤ localStorage');
    
    return defaultFixedContent;
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î:', error);
    
    // –¢–û–õ–¨–ö–û –í –ö–†–ò–¢–ò–ß–ï–°–ö–û–ú –°–õ–£–ß–ê–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∫–∞–ø –∏–∑ localStorage
    try {
      const backupContent = localStorage.getItem(STORAGE_KEY);
      if (backupContent) {
        console.log('üÜò –ò–°–ü–û–õ–¨–ó–£–ï–ú –ë–ï–ö–ê–ü –ò–ó localStorage (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º)');
        const content = JSON.parse(backupContent);
        return fixBlockOrder(content);
      }
    } catch (backupError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–µ–∫–∞–ø–∞:', backupError);
    }
    
    // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑–µ—Ä–≤ - –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    console.log('üÜò –ü–û–°–õ–ï–î–ù–ò–ô –†–ï–ó–ï–†–í: –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç');
    const defaultFixedContent = fixBlockOrder(defaultContent);
    
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –±–µ–∫–∞–ø
    try {
      localStorage.setItem(STORAGE_KEY, JSON.stringify(defaultFixedContent));
      console.log('üíæ –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ –±–µ–∫–∞–ø');
    } catch (storageError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–µ–∫–∞–ø:', storageError);
    }
    
    return defaultFixedContent;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –±–ª–æ–∫–æ–≤
const fixBlockOrder = (content: SiteContent): SiteContent => {
  console.log('üîß Fixing block order');
  console.log('Current blocks:', content.blocks.map(b => ({ id: b.id, title: b.title, order: b.order, type: b.type })));
  
  const reorderedBlocks = content.blocks.map(block => {
    // –°–∏—Å—Ç–µ–º–Ω—ã–µ –±–ª–æ–∫–∏ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
    if (block.id === 'hero') return { ...block, order: 1 };
    if (block.id === 'features') return { ...block, order: 2 };
    if (block.id === 'modules') return { ...block, order: 3 };
    if (block.id === 'can-module') return { ...block, order: 4 };
    if (block.id === 'analog-module') return { ...block, order: 5 }; 
    if (block.id === 'ops-module') return { ...block, order: 6 };
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –±–ª–æ–∫–∞ –ê–ë–° –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    if (block.title && (block.title.includes('–ê–ë–°') || block.title.includes('–∞–±—Å'))) {
      console.log(`üéØ Found ABS block: "${block.title}" - setting order = 7`);
      return { ...block, order: 7, type: 'custom' };
    }
    
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –±–ª–æ–∫–∏ - –º–µ–∂–¥—É OPS (6) –∏ –≤–∏–¥–µ–æ (50)
    if (block.type === 'custom') {
      const customBlocks = content.blocks.filter(b => b.type === 'custom');
      const customIndex = customBlocks.findIndex(b => b.id === block.id);
      const newOrder = 7 + customIndex;
      console.log(`üì¶ Custom block "${block.title}" (${block.id}): ${block.order} -> ${newOrder}`);
      return { ...block, order: newOrder };
    }
    
    // –í–∏–¥–µ–æ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ –∫–æ–Ω—Ü–µ
    if (block.id === 'videos') return { ...block, order: 50 };
    if (block.id === 'contacts') return { ...block, order: 51 };
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å–≤–æ–π –ø–æ—Ä—è–¥–æ–∫
    return block;
  });
  
  console.log('‚úÖ New block order:', reorderedBlocks.map(b => ({ id: b.id, title: b.title, order: b.order, type: b.type })));
  
  return {
    ...content,
    blocks: reorderedBlocks
  };
};

export const loadContentSync = (): SiteContent => {
  try {
    // –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–ª—å–∫–æ –∏–∑ –±–µ–∫–∞–ø–∞ localStorage (–¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤)
    const backupContent = localStorage.getItem(STORAGE_KEY);
    if (backupContent) {
      console.log('üíæ –ó–∞–≥—Ä—É–∂–µ–Ω –±–µ–∫–∞–ø –∏–∑ localStorage (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)');
      const content = JSON.parse(backupContent);
      return fixBlockOrder(content);
    }
  } catch (error) {
    console.error('‚ùå Error loading backup sync:', error);
  }
  console.log('üì¶ Using default content (sync fallback)');
  return fixBlockOrder(defaultContent);
};

export const resetContent = (): SiteContent => {
  // –û—á–∏—â–∞–µ–º –±–µ–∫–∞–ø –≤ localStorage
  localStorage.removeItem(STORAGE_KEY);
  console.log('üóëÔ∏è –ë–µ–∫–∞–ø –≤ localStorage –æ—á–∏—â–µ–Ω');
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ë–ï–ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const ukrainianContent = fixBlockOrder(defaultContent);
  console.log('üì¶ Reset to default content');
  
  return ukrainianContent;
};

export const exportContent = (): string => {
  const content = loadContentSync();
  return JSON.stringify(content, null, 2);
};

export const importContent = (jsonString: string): SiteContent => {
  try {
    const content = JSON.parse(jsonString);
    return content;
  } catch (error) {
    console.error('‚ùå Error importing content:', error);
    throw new Error('Invalid JSON format');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
export const forceSyncWithDatabase = async (): Promise<boolean> => {
  try {
    console.log('üîÑ Force sync with database...');
    const localContent = loadContentSync();
    const success = await saveContentToDatabase(localContent);
    if (success) {
      console.log('‚úÖ Force sync completed successfully');
      window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: true } }));
    } else {
      console.log('‚ùå Force sync failed');
      window.dispatchEvent(new CustomEvent('contentSaved', { detail: { success: false } }));
    }
    return success;
  } catch (error) {
    console.error('‚ùå Error in force sync:', error);
    return false;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é localStorage
export const loadFromDatabaseAndOverwrite = async (): Promise<SiteContent> => {
  try {
    console.log('üîÑ Loading from database and overwriting localStorage...');
    const dbContent = await loadContentFromDatabase();
    if (dbContent) {
      const fixedContent = fixBlockOrder(dbContent);
      localStorage.setItem(STORAGE_KEY, JSON.stringify(fixedContent));
      console.log('‚úÖ Content loaded from database and saved to localStorage');
      return fixedContent;
    } else {
      console.log('‚ö†Ô∏è No content in database, keeping current localStorage');
      return loadContentSync();
    }
  } catch (error) {
    console.error('‚ùå Error loading from database:', error);
    return loadContentSync();
  }
};